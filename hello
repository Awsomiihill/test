#!/usr/bin/bash
#so basically this is very rudimentary, it seems as for now that it works best for single audio, normal videos, dual audio gives issues and gifs/mp4 loops are a hit and miss
mkdir output_frames && mkdir input_frames;

echo "welcome, remember to have ffmpeg and rife-ncnn-vulkan binaries installed"
echo "audio? yes/no"
read soundarg


if [[ ( $soundarg == "no") ]]; then
    echo "no sound OK!"

    echo "What file extension you got there?"
    read ext 

    echo "Filename? MUST BE EXACT!"
    read name

    echo "Framerate? Tip: use ffprobe"
    read n

    ((ae=$n*2))

    ffmpeg -i $name.$ext input_frames/%08d.png;
    wait;
    rife-ncnn-vulkan -i input_frames -o output_frames;
    wait;
    ffmpeg -framerate $ae -i output_frames/%08d.png $name-$ae-fps.$ext
    wait;
    #auto-deletion ae script, they are disabled by default for now
     #rm -r output_frames input_frames;

else
    echo "sound OK!"

    echo "What file extension you got there?"
    read ext 

    echo "Filename? MUST BE EXACT!"
    read name

    echo "Framerate? Tip: use ffprobe"
    read n

    ((ae=$n*2))

    ffmpeg -i $name.$ext -vn -acodec copy audio.flac;
    wait;
    ffmpeg -i $name.$ext input_frames/%08d.png;
    wait;
    rife-ncnn-vulkan -i input_frames -o output_frames;
    wait;
    ffmpeg -framerate $ae -i output_frames/%08d.png -i audio.flac -c:a copy -crf 20 -c:v libx264 -pix_fmt yuv420p $name-$ae-fps.$ext
    wait;
    #auto-deletion ae script, they are disabled by default for now
     #rm -r output_frames input_frames;
     #rm audio.flac;
fi